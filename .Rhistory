object <- e1071::cmeans(data, k, m = fuzz)
clusters <- object$cluster
} else if(model == "gmm"){
object <- mclust::Mclust(data, G=k, modelNames = cov)
clusters <- object$classification
} else if(model == "dbscan"){
object <- dbscan::dbscan(data, eps=eps, minPts  = minpts)
clusters <- object$cluster
} else if(model == "hier"){
object <- hclust(dist(data), method = linkage)
clusters <- cutree(object, h = eps)
}
if(return.model){
return(object)
} else {
return(clusters)
}
} else {
print("modelo no soportado")
}
}
clusteriza <- function(data, model, k = NULL, linkage = "complete", h = NULL, cov = "EII", minpts = 5,
eps = NULL, fuzz = 2, return.model = FALSE){
if(is.null(eps) & model == "dbscan") {eps <- data_tsne %>% cov() %>% diag() %>% sum() %>% sqrt()}
if(is.null(h) & model = "hier") {h <- data_tsne %>% cov() %>% diag() %>% sum() %>% sqrt()}
if(is.null(k) & (model %in% c("kmeans", "cmeans", "gmm"))) {k <- floor(sqrt(nrow(data)))}
if(model %in% models){
if(model == "kmeans"){
object <- kmeans(data, k)
clusters <- object$cluster
} else if(model == "cmeans"){
object <- e1071::cmeans(data, k, m = fuzz)
clusters <- object$cluster
} else if(model == "gmm"){
object <- mclust::Mclust(data, G=k, modelNames = cov)
clusters <- object$classification
} else if(model == "dbscan"){
object <- dbscan::dbscan(data, eps=eps, minPts  = minpts)
clusters <- object$cluster
} else if(model == "hier"){
object <- hclust(dist(data), method = linkage)
clusters <- cutree(object, h = eps)
}
if(return.model){
return(object)
} else {
return(clusters)
}
} else {
print("modelo no soportado")
}
}
clusteriza <- function(data, model, k = NULL, linkage = "complete", h = NULL, cov = "EII", minpts = 5,
eps = NULL, fuzz = 2, return.model = FALSE){
}
clusteriza <- function(data, model, k = NULL, linkage = "complete", h = NULL, cov = "EII", minpts = 5,
eps = NULL, fuzz = 2, return.model = FALSE){
if(is.null(eps) & model == "dbscan") {eps <- data_tsne %>% cov() %>% diag() %>% sum() %>% sqrt()}
if(is.null(h) & model = "hier") {h <- data_tsne %>% cov() %>% diag() %>% sum() %>% sqrt()}
if(is.null(k) & (model %in% c("kmeans", "cmeans", "gmm"))) {k <- floor(sqrt(nrow(data)))}
}
clusteriza <- function(data, model, k = NULL, linkage = "complete", h = NULL, cov = "EII", minpts = 5,
eps = NULL, fuzz = 2, return.model = FALSE){
if(is.null(eps) & model == "dbscan") {eps <- data_tsne %>% cov() %>% diag() %>% sum() %>% sqrt()}
if(is.null(h) & model == "hier") {h <- data_tsne %>% cov() %>% diag() %>% sum() %>% sqrt()}
if(is.null(k) & (model %in% c("kmeans", "cmeans", "gmm"))) {k <- floor(sqrt(nrow(data)))}
if(model %in% models){
if(model == "kmeans"){
object <- kmeans(data, k)
clusters <- object$cluster
} else if(model == "cmeans"){
object <- e1071::cmeans(data, k, m = fuzz)
clusters <- object$cluster
} else if(model == "gmm"){
object <- mclust::Mclust(data, G=k, modelNames = cov)
clusters <- object$classification
} else if(model == "dbscan"){
object <- dbscan::dbscan(data, eps=eps, minPts  = minpts)
clusters <- object$cluster
} else if(model == "hier"){
object <- hclust(dist(data), method = linkage)
clusters <- cutree(object, h = eps)
}
if(return.model){
return(object)
} else {
return(clusters)
}
} else {
print("modelo no soportado")
}
}
pacman::p_load(mclust, e1071, cluster, flexclust, factoextra, magrittr)
# veamos con todos los modelos
d <- dist(data_tsne)
quantile(d)
options(scipen = 999)
quantile(d)
for(m in models){
hiper_m <- hiperpars %>% filter(model == m)
for()
}
hiper_m
for(m in models){
hiper_m <- hiperpars %>% filter(model == m)
}
hiper_m
hiper_m <- hiperpars %>% filter(model == m) %>% pull(param)
hiper_m
sqrt(nrow(data_tsne))
quantile(d, p = 1:10)
quantile(d, p = (1:10)/10)
quantile(d, p = (1:9)/10)
dists <- quantile(d, p = (1:9)/10)
nks <- quantile(nrow(data_tsne), p = (1:9)/10)
nks
nks <- quantile(1:nrow(data_tsne), p = (1:9)/10)
nks
log(nks)
sqrt(nks)
nks <- quantile(1:sqrt(nrow(data_tsne)), p = (1:9)/10)
(nks)
nks <- floor(quantile(1:sqrt(nrow(data_tsne)), p = (1:9)/10))
nks
c <- clusteriza(data_tsne, model = m, linkage = lnk, h = dis)
for(m in models){
if(m = "hier"){
for(lnk in linkage){
for(dis in dists){
c <- clusteriza(data_tsne, model = m, linkage = lnk, h = dis)
mean(Silhouette(c)[,3])
}
}
}
if(m = "kmeans"){
for(ks in nks){
clusteriza(data_tsne, model = m, k = ks)
}
}
if(m = "cmeans"){
for(ks in nks){
for(fz in 2:10){
clusteriza(data_tsne, model = m, k = ks, fuzz = fz)
}
}
}
if(m = "gmm"){
for(ks in nks){
for(cv in cov){
clusteriza(data_tsne, model = m, k = ks, cov = cv)
}
}
}
if(m = "dbscan"){
for(ep in dists){
for(mp in 5*(1:9)){
clusteriza(data_tsne, model = m, eps = ep, minpts = mp)
}
}
}
}
c <- clusteriza(data_tsne, model = m, linkage = lnk, h = dis)
c(mean(Silhouette(c)[,3]), paste0(m, "-",lnk,"-h:",dis)
}
}
}
if(m = "kmeans"){
for(ks in nks){
clusteriza(data_tsne, model = m, k = ks)
}
}
if(m = "cmeans"){
for(ks in nks){
for(fz in 2:10){
clusteriza(data_tsne, model = m, k = ks, fuzz = fz)
}
}
}
if(m = "gmm"){
for(ks in nks){
for(cv in cov){
clusteriza(data_tsne, model = m, k = ks, cov = cv)
}
}
}
if(m = "dbscan"){
for(ep in dists){
for(mp in 5*(1:9)){
clusteriza(data_tsne, model = m, eps = ep, minpts = mp)
}
}
}
}
for (k in 2:20){
# ejecutamos kmedias con k centroides
modelo <- kmeans(data_tsne, centers = k)
# cramos objeto con la silueta
temp <- silhouette(modelo$cluster, dist(data_tsne))
# almacenamos la silueta promedio del modelo
siluetas[k] <- mean(temp[,3])
}
tempDF <- data.frame(CS=siluetas, K=c(1:20))
# visualizamos
ggplot(tempDF, aes(x=K, y=CS)) +
geom_line() +
scale_x_continuous(breaks=c(1:20)) +
geom_vline(xintercept = which(tempDF$CS == max(tempDF$CS)), col = "red")
siluetas <- NULL
for(m in models){
if(m = "hier"){
for(lnk in linkage){
for(dis in dists){
c <- clusteriza(data_tsne, model = m, linkage = lnk, h = dis)
siluetas <- rbind(siluetas, c(mean(Silhouette(c)[,3]), paste0(m, "-linkage:",lnk,"-h:",dis)))
}
}
}
if(m = "kmeans"){
for(ks in nks){
c <- clusteriza(data_tsne, model = m, k = ks)
siluetas <- rbind(siluetas, c(mean(Silhouette(c)[,3]), paste0(m, "-k:",ks)))
}
}
if(m = "cmeans"){
for(ks in nks){
for(fz in 2:10){
c <- clusteriza(data_tsne, model = m, k = ks, fuzz = fz)
siluetas <- rbind(siluetas, c(mean(Silhouette(c)[,3]), paste0(m, "-k:",ks,"-fuzz:",fz)))
}
}
}
if(m = "gmm"){
for(ks in nks){
for(cv in cov){
c <- clusteriza(data_tsne, model = m, k = ks, cov = cv)
siluetas <- rbind(siluetas, c(mean(Silhouette(c)[,3]), paste0(m, "-k:",ks,"-cov:",cv)))
}
}
}
if(m = "dbscan"){
for(ep in dists){
for(mp in 5*(1:9)){
c <- clusteriza(data_tsne, model = m, eps = ep, minpts = mp)
siluetas <- rbind(siluetas, c(mean(Silhouette(c)[,3]), paste0(m, "-eps:",eps,"-minpts:",mp)))
}
}
}
}
models
for(m in models){}
siluetas <- NULL
for(m in models){
if(m == "hier"){
for(lnk in linkage){
for(dis in dists){
c <- clusteriza(data_tsne, model = m, linkage = lnk, h = dis)
siluetas <- rbind(siluetas, c(mean(Silhouette(c)[,3]), paste0(m, "-linkage:",lnk,"-h:",dis)))
}
}
}
if(m == "kmeans"){
for(ks in nks){
c <- clusteriza(data_tsne, model = m, k = ks)
siluetas <- rbind(siluetas, c(mean(Silhouette(c)[,3]), paste0(m, "-k:",ks)))
}
}
if(m == "cmeans"){
for(ks in nks){
for(fz in 2:10){
c <- clusteriza(data_tsne, model = m, k = ks, fuzz = fz)
siluetas <- rbind(siluetas, c(mean(Silhouette(c)[,3]), paste0(m, "-k:",ks,"-fuzz:",fz)))
}
}
}
if(m == "gmm"){
for(ks in nks){
for(cv in cov){
c <- clusteriza(data_tsne, model = m, k = ks, cov = cv)
siluetas <- rbind(siluetas, c(mean(Silhouette(c)[,3]), paste0(m, "-k:",ks,"-cov:",cv)))
}
}
}
if(m == "dbscan"){
for(ep in dists){
for(mp in 5*(1:9)){
c <- clusteriza(data_tsne, model = m, eps = ep, minpts = mp)
siluetas <- rbind(siluetas, c(mean(Silhouette(c)[,3]), paste0(m, "-eps:",eps,"-minpts:",mp)))
}
}
}
}
c
? Silhouette
siluetas <- rbind(siluetas, c(mean(Silhouette(c, d)[,3]), paste0(m, "-linkage:",lnk,"-h:",dis)))
Silhouette(c, d)
# ejecutamos un modelo para probar su clusterizacion
modelo_kmeans <- kmeans(data_tsne, 13)
# almacenamos los clusters en un vector que contiene el numero de cada cluster y el indice
clusters <- modelo_kmeans$cluster
siluetas <- rbind(siluetas, c(mean(silhouette(c, d)[,3]), paste0(m, "-linkage:",lnk,"-h:",dis)))
siluetas <- NULL
for(m in models){
if(m == "hier"){
for(lnk in linkage){
for(dis in dists){
c <- clusteriza(data_tsne, model = m, linkage = lnk, h = dis)
siluetas <- rbind(siluetas, c(mean(silhouette(c, d)[,3]), paste0(m, "-linkage:",lnk,"-h:",dis)))
}
}
}
if(m == "kmeans"){
for(ks in nks){
c <- clusteriza(data_tsne, model = m, k = ks)
siluetas <- rbind(siluetas, c(mean(silhouette(c, d)[,3]), paste0(m, "-k:",ks)))
}
}
if(m == "cmeans"){
for(ks in nks){
for(fz in 2:10){
c <- clusteriza(data_tsne, model = m, k = ks, fuzz = fz)
siluetas <- rbind(siluetas, c(mean(silhouette(c, d)[,3]), paste0(m, "-k:",ks,"-fuzz:",fz)))
}
}
}
if(m == "gmm"){
for(ks in nks){
for(cv in cov){
c <- clusteriza(data_tsne, model = m, k = ks, cov = cv)
siluetas <- rbind(siluetas, c(mean(silhouette(c, d)[,3]), paste0(m, "-k:",ks,"-cov:",cv)))
}
}
}
if(m == "dbscan"){
for(ep in dists){
for(mp in 5*(1:9)){
c <- clusteriza(data_tsne, model = m, eps = ep, minpts = mp)
siluetas <- rbind(siluetas, c(mean(silhouette(c, d)[,3]), paste0(m, "-eps:",eps,"-minpts:",mp)))
}
}
}
}
clusteriza <- function(data, model, k = NULL, linkage = "complete",
h = NULL, cov = "EII", minpts = 5,
eps = NULL, fuzz = 2, return.model = FALSE){
if(is.null(eps) & model == "dbscan") {eps <- data %>% cov() %>% diag() %>% sum() %>% sqrt()}
if(is.null(h) & model == "hier") {h <- data %>% cov() %>% diag() %>% sum() %>% sqrt()}
if(is.null(k) & (model %in% c("kmeans", "cmeans", "gmm"))) {k <- floor(sqrt(nrow(data)))}
if(model %in% models){
if(model == "kmeans"){
object   <- kmeans(data, k)
clusters <- object$cluster
} else if(model == "cmeans"){
object   <- e1071::cmeans(data, k, m = fuzz)
clusters <- object$cluster
} else if(model == "gmm"){
object   <- mclust::Mclust(data, G=k, modelNames = cov)
clusters <- object$classification
} else if(model == "dbscan"){
object   <- dbscan::dbscan(data, eps=eps, minPts  = minpts)
clusters <- object$cluster
} else if(model == "hier"){
object   <- hclust(dist(data), method = linkage)
clusters <- cutree(object, h = h)
}
if(return.model){
return(object)
} else {
return(clusters)
}
} else {
print("modelo no soportado")
}
}
siluetas <- NULL
for(m in models){
if(m == "hier"){
for(lnk in linkage){
for(dis in dists){
c <- clusteriza(data_tsne, model = m, linkage = lnk, h = dis)
siluetas <- rbind(siluetas, c(mean(silhouette(c, d)[,3]), paste0(m, "-linkage:",lnk,"-h:",dis)))
}
}
}
if(m == "kmeans"){
for(ks in nks){
c <- clusteriza(data_tsne, model = m, k = ks)
siluetas <- rbind(siluetas, c(mean(silhouette(c, d)[,3]), paste0(m, "-k:",ks)))
}
}
if(m == "cmeans"){
for(ks in nks){
for(fz in 2:10){
c <- clusteriza(data_tsne, model = m, k = ks, fuzz = fz)
siluetas <- rbind(siluetas, c(mean(silhouette(c, d)[,3]), paste0(m, "-k:",ks,"-fuzz:",fz)))
}
}
}
if(m == "gmm"){
for(ks in nks){
for(cv in cov){
c <- clusteriza(data_tsne, model = m, k = ks, cov = cv)
siluetas <- rbind(siluetas, c(mean(silhouette(c, d)[,3]), paste0(m, "-k:",ks,"-cov:",cv)))
}
}
}
if(m == "dbscan"){
for(ep in dists){
for(mp in 5*(1:9)){
c <- clusteriza(data_tsne, model = m, eps = ep, minpts = mp)
siluetas <- rbind(siluetas, c(mean(silhouette(c, d)[,3]), paste0(m, "-eps:",eps,"-minpts:",mp)))
}
}
}
}
m
h
lnk
dis
c <- clusteriza(data_tsne, model = m, linkage = lnk, h = dis)
silhouette(c, d)
c
? cutree
clusteriza <- function(data, model, k = NULL, linkage = "complete",
h = NULL, cov = "EII", minpts = 5,
eps = NULL, fuzz = 2, return.model = FALSE){
if(is.null(eps) & model == "dbscan") {eps <- data %>% cov() %>% diag() %>% sum() %>% sqrt()}
if(is.null(k) & (model %in% c("kmeans", "cmeans", "gmm"))) {k <- floor(sqrt(nrow(data)))}
if(model %in% models){
if(model == "kmeans"){
object   <- kmeans(data, k)
clusters <- object$cluster
} else if(model == "cmeans"){
object   <- e1071::cmeans(data, k, m = fuzz)
clusters <- object$cluster
} else if(model == "gmm"){
object   <- mclust::Mclust(data, G=k, modelNames = cov)
clusters <- object$classification
} else if(model == "dbscan"){
object   <- dbscan::dbscan(data, eps=eps, minPts  = minpts)
clusters <- object$cluster
} else if(model == "hier"){
object   <- hclust(dist(data), method = linkage)
clusters <- cutree(object, k = k)
}
if(return.model){
return(object)
} else {
return(clusters)
}
} else {
print("modelo no soportado")
}
}
for(m in models){
if(m == "hier"){
for(lnk in linkage){
for(ks in nks){
c <- clusteriza(data_tsne, model = m, linkage = lnk, k = ks)
siluetas <- rbind(siluetas, c(mean(silhouette(c, d)[,3]), paste0(m, "-linkage:",lnk,"-h:",dis)))
}
}
}
if(m == "kmeans"){
for(ks in nks){
c <- clusteriza(data_tsne, model = m, k = ks)
siluetas <- rbind(siluetas, c(mean(silhouette(c, d)[,3]), paste0(m, "-k:",ks)))
}
}
if(m == "cmeans"){
for(ks in nks){
for(fz in 2:10){
c <- clusteriza(data_tsne, model = m, k = ks, fuzz = fz)
siluetas <- rbind(siluetas, c(mean(silhouette(c, d)[,3]), paste0(m, "-k:",ks,"-fuzz:",fz)))
}
}
}
if(m == "gmm"){
for(ks in nks){
for(cv in cov){
c <- clusteriza(data_tsne, model = m, k = ks, cov = cv)
siluetas <- rbind(siluetas, c(mean(silhouette(c, d)[,3]), paste0(m, "-k:",ks,"-cov:",cv)))
}
}
}
if(m == "dbscan"){
for(ep in dists){
for(mp in 5*(1:9)){
c <- clusteriza(data_tsne, model = m, eps = ep, minpts = mp)
siluetas <- rbind(siluetas, c(mean(silhouette(c, d)[,3]), paste0(m, "-eps:",eps,"-minpts:",mp)))
}
}
}
}
# creamos vector vacio para almacenar siluetas
siluetas <- numeric(20)
# creamos vector vacio para almacenar siluetas
siluetas <- numeric(20)
for (k in 2:20){
# ejecutamos kmedias con k centroides
modelo <- kmeans(data_tsne, centers = k)
# cramos objeto con la silueta
temp <- silhouette(modelo$cluster, dist(data_tsne))
# almacenamos la silueta promedio del modelo
siluetas[k] <- mean(temp[,3])
}
tempDF <- data.frame(CS=siluetas, K=c(1:20))
# visualizamos
ggplot(tempDF, aes(x=K, y=CS)) +
geom_line() +
scale_x_continuous(breaks=c(1:20)) +
geom_vline(xintercept = which(tempDF$CS == max(tempDF$CS)), col = "red")
source("R/clusteriza.R")
